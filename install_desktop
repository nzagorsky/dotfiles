#!/usr/bin/env bash
# This file represents installation scripts for Gnome and common desktop tools.
# OSes currently supported: Ubuntu

GNOME_EXTENSION_INSTALLER=~/.scripts/gnome-shell-extension-installer

identify_os () {
    . /etc/os-release
    echo $NAME | tr '[:upper:]' '[:lower:]'
}

setup_docker_ubuntu() {
    sudo apt-get install -qq -y docker.io
    sudo systemctl enable docker --now
    sudo gpasswd -a $USER docker
}

install_wine_dependencies_fedora() {
    sudo dnf install -y gnutls gnutls.i686 gnutls-devel gnutls-devel.i686 \
        openldap openldap.i686 openldap-devel openldap-devel.i686 libgpg-error \
        libgpg-error.i686 sqlite2.i686 sqlite2.x86_64
}

install_ldac_ubuntu() {
    dpkg --no-pager -l pulseaudio-modules-bt > /dev/null && return

    sudo add-apt-repository -y ppa:berglh/pulseaudio-a2dp
    sudo apt install -y -qq pulseaudio-modules-bt libldac
    pulseaudio -k
}

setup_node_ubuntu() {
    curl -fsSL https://deb.nodesource.com/setup_14.x | sudo -E bash -
    sudo apt-get install -y nodejs
}

install_docker_fedora() {
    command -v docker > /dev/null && return 0

    sudo dnf -y install dnf-plugins-core
    sudo dnf config-manager  --add-repo  https://download.docker.com/linux/fedora/docker-ce.repo 
    sudo dnf install -y docker-ce docker-ce-cli containerd.io
    sudo systemctl enable docker --now
    sudo gpasswd -a $USER docker
}

install_media_requirements_fedora() {
    command -v ffmpegthumbnailer > /dev/null && return 0

    sudo dnf install -y gstreamer1-libav gstreamer1-plugins-ugly unrar compat-ffmpeg28 ffmpeg-libs ffmpegthumbnailer
    rm -rf .cache/thumbnails/fail/gnome-thumbnail-factory/*
    rm -rf .cache/thumbnails/large/*
    nautilus -q
}

install_gnome_extension() {
    extension_name=$1
    extension_id=$2
    gnome-extensions list | grep $extension_name > /dev/null  || $GNOME_EXTENSION_INSTALLER --yes $extension_id; gnome-extensions enable $extension_name
}

configure_gnome () {
    # Put dconf settings in
    dconf load  / < assets/gnome/dconf.conf
    gsettings set org.gnome.shell.app-switcher current-workspace-only true
    gsettings set org.gnome.desktop.peripherals.keyboard repeat-interval 20
    gsettings set org.gnome.desktop.peripherals.keyboard delay 200

    $GNOME_EXTENSION_INSTALLER --update

    # Do not install extensions if they are installed already.
    gnome-extensions info -q gsconnect@andyholmes.github.io > /dev/null && return

    # Install and enable required extensions
    install_gnome_extension gsconnect@andyholmes.github.io 1319  # GSconnect
    install_gnome_extension appindicatorsupport@rgcjonas.gmail.com 615  # KStatusNotifierItem
    install_gnome_extension bluetooth-quick-connect@bjarosze.gmail.com 1401  # Bluetooth quick connect
    install_gnome_extension impatience@gfxmonk.net 277  # Faster animations
    install_gnome_extension user-theme@gnome-shell-extensions.gcampax.github.com 19  # Shell themes

    curl -sL https://github.com/windsorschmidt/disable-workspace-switcher-popup/tarball/master |
      tar xzv --wildcards --strip 1 --directory ~/.local/share/gnome-shell/extensions/ \
      "*/disable-workspace-switcher-popup@github.com"

    curl -sL https://github.com/nzagorsky/audio-switcher/tarball/master |
      tar xzv --wildcards --strip 1 --directory ~/.local/share/gnome-shell/extensions/ \
      "*/audio-switcher@github.com"

    # install_gnome_extension mprisindicatorbutton@JasonLG1979.github.io 1379  # MPRIS indicator button
    # install_gnome_extension cpufreq@konkor 1082  # CPUfreq applet to control CPU boost
    # install_gnome_extension dash-to-dock@micxgx.gmail.com 307  # dash to dock
    # install_gnome_extension disableworkspaceanim@owilliams.mixxx.org 1328  # Workspace switch animation disabler
    # install_gnome_extension auto-move-windows@gnome-shell-extensions.gcampax.github.com 16  # AutoMoveWindows
    # install_gnome_extension unite@hardpixel.eu 1287  # Unite
    # install_gnome_extension caffeine@patapon.info 517  # caffeine
    # install_gnome_extension dash-to-panel@jderose9.github.com 1160  # Dash to panel
    # install_gnome_extension blyr@yozoon.dev.gmail.com 1251  # blyr
    # install_gnome_extension hidetopbar@mathieu.bidon.ca 545  # hide top bar
}

install_flatpak_packages_ubuntu() {
    sudo apt-get install -qq flatpak gnome-software-plugin-flatpak

    flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
    flatpak install --user -y flathub com.todoist.Todoist
    flatpak install --user -y flathub com.spotify.Client
    flatpak install --user -y flathub com.github.calo001.fondo
    flatpak install --user -y flathub md.obsidian.Obsidian

}

install_snap_packages() {
    sudo snap install --beta authy
}

install_mailspring_ubuntu() {
    wget -q "https://updates.getmailspring.com/download?platform=linuxDeb" -O /tmp/mailspring.deb
    sudo dpkg -i /tmp/mailspring.deb
    rm /tmp/mailspring.deb
}

install_brave_ubuntu() {
    sudo apt-get install -qq -y apt-transport-https curl > /dev/null
    sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
    echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main"|sudo tee /etc/apt/sources.list.d/brave-browser-release.list
    sudo apt-get update -qq > /dev/null
    sudo apt-get install -qq -y brave-browser
}


install_dbeaver_ubuntu() {
    dpkg -s dbeaver-ce &>/dev/null && return 0
    wget -q https://dbeaver.io/files/dbeaver-ce_latest_amd64.deb -O /tmp/dbeaver.deb
    sudo dpkg -i /tmp/dbeaver.deb
    rm /tmp/dbeaver.deb
}

install_toptracker_ubuntu() {
    dpkg -s toptracker &>/dev/null && return 0

    wget -q https://tracker-api.toptal.com/desktop/latest/debian -O /tmp/toptracker.deb
    sudo dpkg -i /tmp/toptracker.deb
    rm /tmp/toptracker.deb
}

install_mega_fedora() {
    command -v megasync > /dev/null && return 0

    . /etc/os-release
    wget -q "https://mega.nz/linux/MEGAsync/Fedora_$VERSION_ID/x86_64/megasync-Fedora_$VERSION_ID.x86_64.rpm" -O /tmp/mega.rpm
    sudo dnf localinstall -y /tmp/mega.rpm
    rm /tmp/mega.rpm
}

install_toptracker_fedora() {
    command -v toptracker > /dev/null && return 0

    wget -q "https://tracker-api.toptal.com/desktop/latest/redhat" -O /tmp/toptracker.rpm
    sudo dnf localinstall -y /tmp/toptracker.rpm

}

install_dbeaver_fedora() {
    command -v dbeaver > /dev/null && return 0

    wget -q "https://dbeaver.io/files/dbeaver-ce-latest-stable.x86_64.rpm" -O /tmp/dbeaver.rpm
    sudo dnf localinstall -y /tmp/dbeaver.rpm

}

install_mega_ubuntu() {
    dpkg -s megasync &>/dev/null && return 0

    . /etc/os-release

    wget -q https://mega.nz/linux/MEGAsync/xUbuntu_"$VERSION_ID"/amd64/megasync-xUbuntu_"$VERSION_ID"_amd64.deb -O /tmp/megasync.deb
    sudo dpkg -i /tmp/megasync.deb
    rm /tmp/megasync.deb
}

# install_spotify_ubuntu() {
#     curl -sS https://download.spotify.com/debian/pubkey_0D811D58.gpg | sudo apt-key add - 
#     echo "deb http://repository.spotify.com stable non-free" | sudo tee /etc/apt/sources.list.d/spotify.list
#     sudo apt-get update && sudo apt-get install -qq -y spotify-client
# }


install_base_desktop_ubuntu() {
    sudo apt-get update > /dev/null

    sudo apt-get install -qq -y \
        cpufrequtils \
        mpv \
        gnome-tweak-tool \
        openvpn \
        pavucontrol \
        pulsemixer \
        sqlitebrowser \
        telegram-desktop \
        transmission-gtk \
        xclip \
        linux-tools-$(uname -r) \
        && setup_docker_ubuntu \
    && >&2 echo -e '\033[1mBase desktop packages are installed\033[0m'
    }


install_brave_fedora() {
    command -v brave-browser > /dev/null && exit 0

    sudo dnf install -y dnf-plugins-core
    sudo dnf config-manager --add-repo https://brave-browser-rpm-release.s3.brave.com/x86_64/
    sudo rpm --import https://brave-browser-rpm-release.s3.brave.com/brave-core.asc
    sudo dnf install -y brave-browser
}

install_mailspring_fedora() {
    command -v mailspring > /dev/null && exit 0

    wget "https://updates.getmailspring.com/download?platform=linuxRpm" -O /tmp/mailspring.rpm
    sudo dnf localinstall -y /tmp/mailspring.rpm
    rm /tmp/mailspring.rpm
}

install_base_desktop_fedora() {
    command -v telegram-desktop > /dev/null && exit 0

    # Enable RPM fusion
    sudo dnf install -y https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm

    sudo dnf install -y \
        mpv \
        alacritty \
        lm_sensors \
        stress \
        openvpn \
        seahorse \
        gnome-tweak-tool \
        gnome-extensions-app \
        telegram-desktop
}


install_cargo_packages() {

    # Install alacritty
    if ! command -v alacritty &> /dev/null 
    then
        BUILD_PATH=/tmp/alacritty
        cargo install alacritty --root $BUILD_PATH; sudo cp $BUILD_PATH/bin/alacritty /usr/bin/alacritty


        sudo cp assets/alacritty/alacritty-term.svg /usr/share/pixmaps/Alacritty.svg
        sudo desktop-file-install assets/alacritty/Alacritty.desktop
        sudo update-desktop-database
    fi
}

main () {
    OS_DETECTED=`identify_os`
    echo -e "\033[1m"
    echo "------------------------------"
    echo "OS: $OS_DETECTED"
    echo "Desktop: $XDG_SESSION_DESKTOP"
    echo "------------------------------"
    echo -e "\033[0m"

    if [ "$OS_DETECTED" == "ubuntu" ]; then
        install_base_desktop_ubuntu
        install_snap_packages > /dev/null
        install_flatpak_packages_ubuntu > /dev/null
        install_cargo_packages > /dev/null

        install_brave_ubuntu
        install_dbeaver_ubuntu
        install_mailspring_ubuntu
        install_mega_ubuntu
        install_toptracker_ubuntu

    elif [ "$OS_DETECTED" == "fedora" ]; then
        install_base_desktop_fedora

        install_brave_fedora
        install_dbeaver_fedora
        install_docker_fedora
        install_mailspring_fedora
        install_mega_fedora
        install_toptracker_fedora
        install_media_requirements_fedora
        install_wine_dependencies_fedora

    else
        echo "Did not detect OS. Quitting."
        exit 1

    fi


    if [ "$XDG_SESSION_DESKTOP" == "gnome" ]; then
        configure_gnome
    elif [ "$XDG_SESSION_DESKTOP" == "ubuntu" ]; then
        configure_gnome
    else
        echo "Did not detect session. Check XDG_SESSION_DESKTOP variable. Current value is $XDG_SESSION_DESKTOP"
        exit 1
    fi
}

main
