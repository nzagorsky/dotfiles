#!/usr/bin/bash
# Arch setup

set -e

install_npm_deps () {
    sudo npm install -g --quiet --silent @bitwarden/cli > /dev/null 2>&1
    sudo npm install -g --quiet --silent \
        neovim \
        bash-language-server \
        dockerfile-language-server-nodejs \
        javascript-typescript-langserver \
        prettier \
        pyright \
        standard > /dev/null 2>&1 \
    && echo -e "${BOLD}npm install success${NC}"
}

install_python_deps() {
    pip install -U --user setuptools wheel --no-warn-script-location

    pip install -U --user \
        "python-language-server[all]" \
        awscli \
        black \
        psycopg2 \
        smart-open \
        boto3 \
        dateparser \
        django-stubs \
        "django<3" \
        ipdb \
        ipython \
        saws \
        neovim \
        requests \
        selenium \
        youtube-dl \
        vim-vint \
        yamllint \
        --no-warn-script-location \
        && echo -e "${BOLD}pip install success${NC}"
}

setup_base() {
    sudo dnf install \
        bat \
        ctags \
	postgresql-devel \
        util-linux-user \
	python-devel \
        curl \
        python-pip \
        ncdu \
        exa \
        fd-find \
        fzf \
        git \
        go \
        htop \
        httpie \
        jq \
        lm_sensors \
        neovim \
        npm \
        openvpn \
        rclone \
        ripgrep \
        stow \
        stress \
        tmux \
        unzip \
        wget \
        zip \
        zsh

    sudo sed -i '/PasswordAuthentication/c\PasswordAuthentication no' /etc/ssh/sshd_config

    go install github.com/cespare/reflex@latest
}

install_neovim_plugins() {
    nvim test.py --headless +UpdateRemotePlugins +q > /dev/null 2>&1
    echo -e "${BOLD}neovim install success${NC}"
}

configure_shell() {

    sudo chsh $(whoami) -s $(which zsh)
}

# setup_media() {
    # command -v ffmpegthumbnailer > /dev/null && return 0
# 
    # sudo pacman -S --needed --noconfirm ffmpegthumbnailer gst-plugins-ugly
    # rm -rf .cache/thumbnails/fail/gnome-thumbnail-factory/*
    # rm -rf .cache/thumbnails/large/*
    # rm -rf ~/.cache/gstreamer-1.0/*
    # nautilus -q

# }

setup_desktop() {
    sudo dnf install \
        alacritty \
        lutris \
        xclip
}

install_chromedriver() {
    set -e
    CHROMEDRIVER_RELEASE=$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
    wget -q "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip" -O /tmp/chromedriver.zip
    rm -rf /tmp/chromedriver/
    mkdir /tmp/chromedriver/
    unzip -qq /tmp/chromedriver.zip -d /tmp/chromedriver/
    chmod +x /tmp/chromedriver/chromedriver
    sudo install /tmp/chromedriver/chromedriver /usr/local/bin/chromedriver
    rm -rf /tmp/chromedriver/
}

configure_gnome () {
    # Put dconf settings in
    dconf load  / < assets/gnome/dconf.conf
    gsettings set org.gnome.shell.app-switcher current-workspace-only true
    gsettings set org.gnome.desktop.peripherals.keyboard repeat-interval 20
    gsettings set org.gnome.desktop.peripherals.keyboard delay 200
    gsettings set org.gnome.desktop.default-applications.terminal exec alacritty
}

main () {
    setup_base

    setup_desktop
    # setup_media
    install_chromedriver

    install_npm_deps
    install_python_deps
    install_neovim_plugins
    configure_shell
    configure_gnome
}


main
