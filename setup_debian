#!/usr/bin/env bash

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
BOLD='\033[1m'
NC='\033[0m'

cat ~/.zshrc | grep PATH | grep -v brew > /tmp/dotenv && source /tmp/dotenv

setup_kubectl() {
    command -v kubectl > /dev/null && return 0

    pushd `pwd`
    cd /tmp
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
    rm kubectl
    popd
}

setup_helm() {
    command -v helm > /dev/null && return 0

    pushd `pwd`
    cd /tmp
    curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    chmod 700 get_helm.sh
    ./get_helm.sh
    helm repo add bitnami https://charts.bitnami.com/bitnami
    helm repo update
    popd
}

setup_node_debian() {
    command -v node > /dev/null && return 0

    curl -fsSL https://deb.nodesource.com/setup_14.x | sudo -E bash -
    sudo apt-get install -y nodejs
}


install_base_debian () {
    sudo apt-get update -qq

    sudo apt-get install -y -qq \
        bat \
        build-essential \
        cmake \
        curl \
        mosh \
        zsh \
        fd-find \
        htop \
        httpie \
        iotop \
        jq \
        fzy \
        fzf \
        lm-sensors \
        neovim \
        net-tools \
        openssh-server \
        pkg-config \
        postgresql-client \
        python3 \
        python3-dev \
        python3-venv \
        python3-pip \
        software-properties-common \
        sqlite3 \
        sshfs \
        tldr \
        tmux \
        universal-ctags \
        unzip \
        wget \
        zip \
        && install_rust \
        && setup_node_debian \
        && cargo install exa -q \
        && cargo install ripgrep -q \
        && cargo install du-dust -q \
    && echo -e "${BOLD}Base install success${NC}"

    command -v rclone > /dev/null 2>&1 || curl -s https://rclone.org/install.sh | sudo bash
    command -v pulumi > /dev/null 2>&1 || curl -fsSL https://get.pulumi.com | sh

    tldr -u > /dev/null 2>&1 || echo

    # Libs deps
    sudo apt-get install -y libmysqlclient-dev libxmlsec1-dev pkg-config

    sudo sed -i '/PasswordAuthentication/c\PasswordAuthentication no' /etc/ssh/sshd_config
}


install_rust() {
    command -v rustup > /dev/null && return 0

    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > /tmp/rustup_installer.sh
    sh /tmp/rustup_installer.sh -y
    rm /tmp/rustup_installer.sh
    rustup default stable
}


install_chromedriver() {
    set -e
    CHROMEDRIVER_RELEASE=$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
    wget -q "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip" -O /tmp/chromedriver.zip
    rm -rf /tmp/chromedriver/
    mkdir /tmp/chromedriver/
    unzip -qq /tmp/chromedriver.zip -d /tmp/chromedriver/
    chmod +x /tmp/chromedriver/chromedriver
    sudo install /tmp/chromedriver/chromedriver /usr/local/bin/chromedriver
    rm -rf /tmp/chromedriver/
}


install_npm_deps () {
    npm install -g --quiet --silent @bitwarden/cli > /dev/null 2>&1
    npm install -g --quiet --silent \
        neovim \
        bash-language-server \
        dockerfile-language-server-nodejs \
        elasticdump \
        javascript-typescript-langserver \
        marked \
        prettier \
        pyright \
        standard > /dev/null 2>&1 \
        && echo -e "${BOLD}npm install success${NC}"
    }

install_python_deps() {
    pip3 install -U --user \
        "python-language-server[all]" \
        awscli \
        black \
        isort \
        boto3 \
        dataset \
        dateparser \
        django-stubs \
        "django<3" \
        ipdb \
        ipython \
        smart-open \
        neovim \
        pipenv \
        python-dateutil \
        requests \
        selenium \
        youtube-dl \
        vim-vint \
        yamllint \
        --no-warn-script-location \
        && echo -e "${BOLD}pip install success${NC}"
    }

install_neovim_plugins() {
    nvim test.py --headless +UpdateRemotePlugins +q > /dev/null 2>&1
    echo -e "${BOLD}neovim install success${NC}"
}

configure_shell() {
    sudo chsh $(whoami) -s $(which zsh)
}

main () {
    install_base_debian

    setup_kubectl
    setup_helm
    install_npm_deps
    install_python_deps
    install_chromedriver
    install_neovim_plugins
    configure_shell
}


main
