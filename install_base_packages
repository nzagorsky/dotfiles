#!/usr/bin/env bash

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
BOLD='\033[1m'
NC='\033[0m'

cat ~/.zshrc | grep PATH > /tmp/dotenv && source /tmp/dotenv

install_base_fedora() {
    sudo dnf update
    sudo dnf install -y \
	    stress \
	    zsh \
        fd-find \
	    curl \
	    wget \
	    htop \
	    parallel \
	    jq \
	    util-linux-user \
	    lm_sensors \
	    npm \
        zsh-syntax-highlighting \
	    tmux \
	    ctags \
	    ripgrep \
	    exa \
	    rclone \
        postgresql-devel \
        python3-devel \
    && echo -e "${BOLD}Base install success${NC}"
	    
    # command -v rclone > /dev/null 2>&1 || curl -s https://rclone.org/install.sh | sudo bash
    command -v pulumi > /dev/null 2>&1 || curl -fsSL https://get.pulumi.com | sh

    mkdir -p ~/.local/bin/
    curl -s https://raw.githubusercontent.com/agkozak/polyglot/master/polyglot.sh > ~/.local/bin/polyglot.sh

    sudo systemctl enable sshd --now
    sudo sed -i '/PasswordAuthentication/c\PasswordAuthentication no' /etc/ssh/sshd_config

}

install_base_ubuntu () {
    sudo apt-get update -qq
    sudo apt-get install -y -qq \
        bat \
        build-essential \
        cargo \
        cmake \
        curl \
        zsh \
        zsh-syntax-highlighting  \
        fd-find \
        golang \
        htop \
        httpie \
        iotop \
        jq \
        libfontconfig1-dev \
        libfreetype6-dev \
        libpq-dev \
        libssl-dev \
        libx11-dev \
        libxcb-xfixes0-dev \
        libxft-dev \
        lm-sensors \
        neovim \
        net-tools \
        nodejs \
        npm \
        openssh-server \
        parallel \
        pkg-config \
        postgresql-client \
        pv \
        python3 \
        python3-dev \
        python3-pip \
        software-properties-common \
        sqlite3 \
        sshfs \
        tldr \
        tmux \
        universal-ctags \
        unzip \
        wget \
        zip \
        && cargo install exa -q \
        && cargo install ripgrep -q \
        && cargo install du-dust -q \
    && echo -e "${BOLD}Base install success${NC}"

    command -v rclone > /dev/null 2>&1 || curl -s https://rclone.org/install.sh | sudo bash
    command -v pulumi > /dev/null 2>&1 || curl -fsSL https://get.pulumi.com | sh

    tldr -u > /dev/null 2>&1 || echo

    mkdir -p ~/.local/bin/
    curl -s https://raw.githubusercontent.com/agkozak/polyglot/master/polyglot.sh > ~/.local/bin/polyglot.sh

    sudo sed -i '/PasswordAuthentication/c\PasswordAuthentication no' /etc/ssh/sshd_config
}


install_chromedriver() {
    set -e
    CHROMEDRIVER_RELEASE=$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
    wget -q "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip" -O /tmp/chromedriver.zip
    rm -rf /tmp/chromedriver/
    mkdir /tmp/chromedriver/
    unzip -qq /tmp/chromedriver.zip -d /tmp/chromedriver/
    chmod +x /tmp/chromedriver/chromedriver
    sudo install /tmp/chromedriver/chromedriver /usr/local/bin/chromedriver
    rm -rf /tmp/chromedriver/
}



install_npm_deps () {
    sudo npm install -g --quiet --silent @bitwarden/cli > /dev/null 2>&1
    sudo npm install -g --quiet --silent \
        neovim \
        bash-language-server \
        dockerfile-language-server-nodejs \
        elasticdump \
        javascript-typescript-langserver \
        marked \
        prettier \
        pyright \
        standard > /dev/null 2>&1 \
    && echo -e "${BOLD}npm install success${NC}"
    }

install_python_deps() {
    pip3 install -U --user setuptools wheel --no-warn-script-location > /dev/null

    pip3 install -U --user \
        "python-language-server[all]" \
        awscli \
        bandit \
        black \
        boto3 \
        bpytop \
        dataset \
        dateparser \
        django-stubs \
        docker-compose \
        flake8 \
        flake8-polyfill \
        ipdb \
        ipython \
        iredis \
        jedi \
        litecli \
        mypy \
        neovim \
        nptime \
        pgcli \
        pipenv \
        pulumi \
        pulumi-kubernetes \
        pulumi-aws \
        pulumi-hcloud \
        pydocstyle \
        pyflakes \
        pyinotify \
        python-dateutil \
        radon \
        requests \
        selenium \
        youtube-dl \
        vim-vint \
        yamllint \
        --no-warn-script-location \
        > /dev/null

    echo -e "${BOLD}pip install success${NC}"
    }



identify_os () {
    . /etc/os-release
    echo "$NAME" | tr '[:upper:]' '[:lower:]'
}


install_neovim_plugins() {
    nvim test.py --headless +UpdateRemotePlugins +q > /dev/null 2>&1
    echo -e "${BOLD}neovim install success${NC}"
}

configure_shell() {

    sudo chsh $(whoami) -s $(which zsh)
}

main () {
    OS_DETECTED=$(identify_os)

    if [ "$OS_DETECTED" == "ubuntu" ]; then
        echo -e "${GREEN}Ubuntu detected${NC}"
        install_base_ubuntu

    elif [ "$OS_DETECTED" == "fedora" ]; then
        echo -e "${GREEN}Fedora detected${NC}"
        install_base_fedora

    else
        echo "Didn't detect OS"
        exit 1
    fi


    export -f install_npm_deps
    export -f install_python_deps
    export -f install_chromedriver
    export -f install_neovim_plugins
    export -f configure_shell

    parallel ::: \
        install_npm_deps \
        install_python_deps \
        install_chromedriver \
        install_neovim_plugins \
        configure_shell
}


main
