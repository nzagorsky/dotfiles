# Appearance
# source ~/.tmux/line_config

setw -g mode-keys vi
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Saner splitting in the working dir of the current pane (tmux 1.9)
# bind v split-window -h -c '#{pane_current_path}'
# bind s split-window -v -c '#{pane_current_path}'

# Choose Session
bind S choose-session

setw -g aggressive-resize on
setw -g monitor-activity off

set -sg escape-time 1
set-option -g default-terminal "xterm-256color"
set -g default-command /bin/zsh
set-option -sa terminal-overrides ',xterm-256color:RGB'
set-option -g focus-events on

set -g base-index 1
set-window-option -g pane-base-index 1

set -g history-limit 100000

set-option -g allow-rename off
set-option -g renumber-windows on

bind r source-file ~/.tmux.conf
bind C-j choose-tree

# Setup new prefix
unbind C-b
bind-key C-b send-prefix
set -g prefix C-s


bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind -r h previous-window
bind -r l next-window

# Alt window naviation
bind-key -n M-h previous-window
bind-key -n M-l next-window

bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# Move window with hotkey
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

# Status line settings
set -g status "on"
set -g status-style "bg=default,fg=colour137,dim"
set -g status-justify "left"
set -g status-position "bottom"

# Left status line part
set -g status-left " "
set -g status-left-style "bg=default"
set -g status-left-length 100

# Right status line part
set -g status-right "#{prefix_highlight} #[fg=colour0,nobold,nounderscore,noitalics] #[fg=colour243] %d/%m/%Y %R"

set -g status-right-style "none"
set -g status-right-length "160"

# Message settings
set -g message-style "bg=colour0,fg=colour2"

# Border settings
set -g pane-border-style "bg=default,fg=colour240"
set -g pane-active-border-style "bg=default,fg=colour245"

setw -g window-status-current-format "#W"
setw -g window-status-current-style "bg=default,fg=blue,bold"
setw -g window-status-style "bg=default,fg=colour250"
setw -g window-status-format "#W"
setw -g window-status-separator " "

# Activity setting
setw -g window-status-activity-style "fg=yellow, none"


# NVIM START
is_vim="children=(); i=0; pids=( $(ps -o pid=,tty= | grep -iE '#{s|/dev/||:pane_tty}' | awk '\{print $1\}') ); \
while read -r c p; do [[ -n c && c -ne p && p -ne 0 ]] && children[p]+=\" $\{c\}\"; done <<< \"$(ps -Ao pid=,ppid=)\"; \
while (( $\{#pids[@]\} > i )); do pid=$\{pids[i++]\}; pids+=( $\{children[pid]-\} ); done; \
ps -o state=,comm= -p \"$\{pids[@]\}\" | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
# NVIM END
